[
  {
    "slug": "blog/behind-the-scenes-how-dns",
    "readtime": 12,
    "title": "Behind the Scenes How DNS Translates Domains into Destinations (Part 1)",
    "description": "Discover the hidden workings of the Domain Name System (DNS) as it seamlessly translates human-friendly domain names into machine-readable IP addresses, enabling smooth navigation and access to websites across the internet's vast digital landscape.",
    "date": "2024-08-03T00:00:00.000Z",
    "published": true,
    "tags": [
      "Network",
      "DNS"
    ],
    "body": "const{Fragment:e,jsx:r,jsxs:n}=arguments[0];function _createMdxContent(i){const o={a:\"a\",blockquote:\"blockquote\",code:\"code\",figure:\"figure\",h2:\"h2\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",ul:\"ul\",...i.components};return n(e,{children:[r(o.h2,{id:\"introduction\",children:r(o.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#introduction\",children:\"Introduction\"})}),\"\\n\",r(o.p,{children:\"Imagine effortlessly searching for your favorite recipes,\\nwatching the latest videos, or booking a vacation with just a\\nfew keystrokes. You never worry about the complex web of servers and\\ncodes working behind the scenes. This seamless experience is powered\\nby the Domain Name System (DNS), the unsung hero that translates your\\nsimple domain searches into precise destinations, making the internet\\nuser-friendly and accessible.\"}),\"\\n\",r(o.h2,{id:\"what-dns-is-for\",children:r(o.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#what-dns-is-for\",children:\"What DNS is for?\"})}),\"\\n\",n(o.p,{children:[\"DNS, or Domain Name System, is essential for translating user-friendly\\ndomain names like \",r(o.code,{children:\"example.com\"}),\" into IP addresses like \",r(o.code,{children:\"192.0.2.1\"}),\".\\nThis process enables your browser to locate and connect to the correct\\nserver hosting the website you want to visit. Essentially, DNS acts as\\nthe internet's directory, allowing users to navigate the web easily\\nwithout needing to remember complex numeric addresses.\"]}),\"\\n\",n(o.p,{children:[\"It's like dns-server are server's that are reponsible to locate the destination\\nsuppose you type \",r(o.code,{children:\"www.example.com\"}),\" in your browser, what happens you know a  \",r(o.code,{children:\"dns-query\"}),\" is being made\\nby the browser that goes to the dns server here dns-server actually use\\nto map the ip and the domain that you are looking for, Now you might have these\\nfollow up questions.\"]}),\"\\n\",n(o.blockquote,{children:[\"\\n\",n(o.ol,{children:[\"\\n\",r(o.li,{children:\"Where these DNS server's are?\"}),\"\\n\"]}),\"\\n\"]}),\"\\n\",n(o.blockquote,{children:[\"\\n\",n(o.ol,{start:\"2\",children:[\"\\n\",r(o.li,{children:\"How these possible for a DNS server to locate so many domains?\"}),\"\\n\"]}),\"\\n\"]}),\"\\n\",r(o.p,{children:\"DNS servers are distributed globally across various locations based on their working behavior. Here’s a brief overview of where they are:\"}),\"\\n\",n(o.ul,{children:[\"\\n\",n(o.li,{children:[\"\\n\",n(o.p,{children:[r(o.strong,{children:\"Root DNS Servers\"}),\": There are 13 root servers\\n(designated A to M) distributed worldwide.\\nThese servers are managed by various organizations\\nand provide the initial step in the DNS resolution process,\\ndirecting queries to the appropriate Top-Level Domain (TLD) servers.\"]}),\"\\n\"]}),\"\\n\",n(o.li,{children:[\"\\n\",n(o.p,{children:[r(o.strong,{children:\"TLD DNS Servers\"}),\": These servers manage domain extensions like \",r(o.code,{children:\".com\"}),\", \",r(o.code,{children:\".org\"}),\", or \",r(o.code,{children:\".net\"}),\". They are distributed globally and handle requests for domains within their respecti\"]}),\"\\n\"]}),\"\\n\",n(o.li,{children:[\"\\n\",n(o.p,{children:[r(o.strong,{children:\"Authoritative DNS Servers\"}),\": These servers are operated by domain registrars, web hosting companies, or DNS service providers. They store DNS records for specific domains and provide the final resolution for queries about those domains.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",r(o.p,{children:\"DNS servers can efficiently locate and resolve millions of domains through a hierarchical and distributed system. Here’s how it works:\"}),\"\\n\",n(o.ul,{children:[\"\\n\",n(o.li,{children:[\"\\n\",n(o.p,{children:[r(o.strong,{children:\"Hierarchical Structure:\"}),\" DNS operates in a hierarchical manner:\"]}),\"\\n\",n(o.ul,{children:[\"\\n\",n(o.li,{children:[r(o.strong,{children:\"Root Level:\"}),\" The root servers direct queries to the appropriate TLD servers.\"]}),\"\\n\",n(o.li,{children:[r(o.strong,{children:\"TLD Level:\"}),\" TLD servers manage domains under specific extensions (e.g., .com, .org) and direct queries to the authoritative servers for those domains.\"]}),\"\\n\",n(o.li,{children:[r(o.strong,{children:\"Authoritative Level:\"}),\" Authoritative DNS servers contain the DNS records for individual domains and provide the final resolution.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",n(o.li,{children:[\"\\n\",n(o.p,{children:[r(o.strong,{children:\"Caching:\"}),\" DNS servers use caching to store the results of recent queries:\"]}),\"\\n\",n(o.ul,{children:[\"\\n\",n(o.li,{children:[r(o.strong,{children:\"Recursive DNS Servers:\"}),\"  They cache DNS query results to speed up future lookups for the same domains.\"]}),\"\\n\",n(o.li,{children:[r(o.strong,{children:\"Authoritative DNS Servers:\"}),\" They cache responses to reduce the load on their databases and improve query efficiency.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",r(o.h2,{id:\"how-these-dns-loopup-works\",children:r(o.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#how-these-dns-loopup-works\",children:\"How these DNS loopup works?\"})}),\"\\n\",n(o.ul,{children:[\"\\n\",n(o.li,{children:[\"\\n\",r(o.p,{children:\"You type example.com into your browser and hit Enter.\"}),\"\\n\"]}),\"\\n\",n(o.li,{children:[\"\\n\",r(o.p,{children:\"Your computer first checks its local DNS cache to see if it has a recent IP address for example.com. If not, it sends a query to a DNS server.\"}),\"\\n\"]}),\"\\n\",n(o.li,{children:[\"\\n\",r(o.p,{children:\"If not found in the previous step your query goes to a recursive DNS server, usually provided by your ISP. This server handles the process of finding the IP address for example.com.\"}),\"\\n\"]}),\"\\n\",n(o.li,{children:[\"\\n\",r(o.p,{children:\"If not found in the previous step then the recursive DNS server first asks a root DNS server . The root server doesn't know the IP address but tells the recursive server where to find the .com TLD servers.\"}),\"\\n\"]}),\"\\n\",n(o.li,{children:[\"\\n\",n(o.p,{children:[\"Next, the recursive DNS server queries a .com TLD server. This server doesn't know the exact IP but directs the recursive server to the authoritative DNS server for \",r(o.code,{children:\"example.com\"}),\".\"]}),\"\\n\"]}),\"\\n\",n(o.li,{children:[\"\\n\",r(o.p,{children:\"Finally, the recursive DNS server contacts the authoritative DNS server for example.com. This server has the IP address and responds with it.\"}),\"\\n\"]}),\"\\n\"]}),\"\\n\",r(o.h2,{id:\"dns-records-example\",children:r(o.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#dns-records-example\",children:\"DNS Records Example\"})}),\"\\n\",n(o.ul,{children:[\"\\n\",n(o.li,{children:[\"\\n\",n(o.p,{children:[r(o.strong,{children:\"A Record:\"}),\"  The A record (Address Record) maps the domain name to an IP address.\"]}),\"\\n\",n(o.ul,{children:[\"\\n\",n(o.li,{children:[\"For \",r(o.code,{children:\"www.example.com\"}),\", the A record might look like this\"]}),\"\\n\"]}),\"\\n\",r(o.figure,{\"data-rehype-pretty-code-figure\":\"\",children:r(o.pre,{style:{backgroundColor:\"#24292e\",color:\"#e1e4e8\"},tabIndex:\"0\",\"data-language\":\"mdx\",\"data-theme\":\"github-dark\",children:r(o.code,{\"data-language\":\"mdx\",\"data-theme\":\"github-dark\",style:{display:\"grid\"},children:n(o.span,{\"data-line\":\"\",children:[r(o.span,{style:{color:\"#85E89D\"},children:\"> \"}),r(o.span,{style:{color:\"#DBEDFF\",textDecoration:\"underline\"},children:\"www.example.com\"}),r(o.span,{style:{color:\"#85E89D\"},children:\". IN A 192.0.2.1\"})]})})})}),\"\\n\",n(o.p,{children:[\"This record tells the authoritative server that \",r(o.code,{children:\"www.example.com\"}),\" should resolve to the IP address 192.0.2.1.\"]}),\"\\n\"]}),\"\\n\",n(o.li,{children:[\"\\n\",n(o.p,{children:[r(o.strong,{children:\"CNAME Record:\"}),\"  Used to alias one domain name to another. For example:\"]}),\"\\n\",r(o.figure,{\"data-rehype-pretty-code-figure\":\"\",children:r(o.pre,{style:{backgroundColor:\"#24292e\",color:\"#e1e4e8\"},tabIndex:\"0\",\"data-language\":\"mdx\",\"data-theme\":\"github-dark\",children:r(o.code,{\"data-language\":\"mdx\",\"data-theme\":\"github-dark\",style:{display:\"grid\"},children:n(o.span,{\"data-line\":\"\",children:[r(o.span,{style:{color:\"#85E89D\"},children:\"> mail.example.com. IN CNAME \"}),r(o.span,{style:{color:\"#DBEDFF\",textDecoration:\"underline\"},children:\"www.example.com\"}),r(o.span,{style:{color:\"#85E89D\"},children:\".\"})]})})})}),\"\\n\",n(o.p,{children:[\"This means \",r(o.code,{children:\"mail.example.com\"}),\" points to \",r(o.code,{children:\"www.example.com\"})]}),\"\\n\"]}),\"\\n\",n(o.li,{children:[\"\\n\",n(o.p,{children:[r(o.strong,{children:\"MX Record:\"}),\" Specifies the mail server for handling emails for the domain.\"]}),\"\\n\",r(o.figure,{\"data-rehype-pretty-code-figure\":\"\",children:r(o.pre,{style:{backgroundColor:\"#24292e\",color:\"#e1e4e8\"},tabIndex:\"0\",\"data-language\":\"mdx\",\"data-theme\":\"github-dark\",children:r(o.code,{\"data-language\":\"mdx\",\"data-theme\":\"github-dark\",style:{display:\"grid\"},children:r(o.span,{\"data-line\":\"\",children:r(o.span,{style:{color:\"#85E89D\"},children:\"> example.com. IN MX 10 mail.example.com.\"})})})})}),\"\\n\",n(o.p,{children:[\"This indicates that mail for \",r(o.code,{children:\"example.com\"}),\" should be routed to \",r(o.code,{children:\"mail.example.com\"})]}),\"\\n\"]}),\"\\n\",n(o.li,{children:[\"\\n\",n(o.p,{children:[r(o.strong,{children:\"TXT Record:\"}),\" Provides text information to sources outside your domain, often used for verification.\"]}),\"\\n\",r(o.figure,{\"data-rehype-pretty-code-figure\":\"\",children:r(o.pre,{style:{backgroundColor:\"#24292e\",color:\"#e1e4e8\"},tabIndex:\"0\",\"data-language\":\"mdx\",\"data-theme\":\"github-dark\",children:r(o.code,{\"data-language\":\"mdx\",\"data-theme\":\"github-dark\",style:{display:\"grid\"},children:n(o.span,{\"data-line\":\"\",children:[r(o.span,{style:{color:\"#85E89D\"},children:'> example.com. IN TXT \"v=spf1 include:'}),r(o.span,{style:{color:\"#9ECBFF\"},children:\"_\"}),r(o.span,{style:{color:\"#85E89D\"},children:\"spf.example.com \"}),r(o.span,{style:{color:\"#9ECBFF\"},children:\"~\"}),r(o.span,{style:{color:\"#85E89D\"},children:'all\"'})]})})})}),\"\\n\",n(o.p,{children:[\"This indicates that mail for \",r(o.code,{children:\"example.com\"}),\" should be routed to \",r(o.code,{children:\"mail.example.com\"})]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",r(o.h2,{id:\"practical-view\",children:r(o.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#practical-view\",children:\"Practical View\"})}),\"\\n\",r(\"div\",{style:{position:\"relative\",width:\"100%\",height:0,paddingBottom:\"56.25%\",overflow:\"hidden\"},children:r(\"iframe\",{width:\"760\",style:{position:\"absolute\",top:\"0\",left:\"0\",width:\"100%\",height:\"100%\"},height:\"315\",src:\"https://www.youtube.com/embed/lxZVV-MuM2w?si=r98JBOsVu8dXNZVH\",title:\"YouTube video player\",frameBorder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",referrerPolicy:\"strict-origin-when-cross-origin\",allowFullScreen:!0})})]})}return{default:function(e={}){const{wrapper:n}=e.components||{};return n?r(n,{...e,children:r(_createMdxContent,{...e})}):_createMdxContent(e)}};",
    "slugAsParams": "behind-the-scenes-how-dns"
  },
  {
    "slug": "blog/code-blocks",
    "readtime": 10,
    "title": "Balancing the Load Secrets to Scalable Web Applications",
    "description": "Discover the secrets behind scalable web applications in \"Balancing the Load Secrets to Scalable Web Applications.\" This guide delves into the world of load balancing, revealing how it ensures seamless performance and high availability for major web platforms. Learn about the algorithms and techniques that distribute traffic efficiently across servers, keeping your applications responsive and reliable under heavy demand.",
    "date": "2024-03-04T00:00:00.000Z",
    "published": true,
    "tags": [
      "system design"
    ],
    "body": "const{Fragment:e,jsx:n,jsxs:i}=arguments[0];function _createMdxContent(t){const r={a:\"a\",h2:\"h2\",h3:\"h3\",li:\"li\",ol:\"ol\",p:\"p\",strong:\"strong\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",ul:\"ul\",...t.components};return i(e,{children:[n(r.h2,{id:\"what-is-load-balancer-\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#what-is-load-balancer-\",children:\"What is Load Balancer ?\"})}),\"\\n\",n(r.p,{children:\"A load balancer is a critical component in modern web architecture, designed to efficiently\\ndistribute incoming network traffic across multiple servers. Its primary goal is to ensure\\nthat no single server becomes overwhelmed with too many requests, which can lead to slow\\nresponse times or even server crashes.\"}),\"\\n\",n(r.h3,{id:\"load-balancing-algorithms-are-generally-2-types\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#load-balancing-algorithms-are-generally-2-types\",children:\"Load balancing algorithms are generally 2 types\"})}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Static\"}),\"\\n→ Static load balancing algorithms distribute tasks across servers based on predefined rules,\\nwithout considering the current server load or real-time performance metrics.\"]}),\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Dynamic\"}),\"\\n→ Dynamic load balancing algorithms adapt to real-time conditions by continuously\\nmonitoring server performance metrics such as CPU usage, memory load, and network traffic.\"]}),\"\\n\"]}),\"\\n\",n(r.h2,{id:\"key-differences\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#key-differences\",children:\"Key Differences\"})}),\"\\n\",i(r.table,{children:[n(r.thead,{children:i(r.tr,{children:[n(r.th,{style:{textAlign:\"left\"},children:\"Aspect\"}),n(r.th,{style:{textAlign:\"left\"},children:\"Static Load Balancing\"}),n(r.th,{style:{textAlign:\"left\"},children:\"Dynamic Load Balancing\"})]})}),i(r.tbody,{children:[i(r.tr,{children:[n(r.td,{style:{textAlign:\"left\"},children:n(r.strong,{children:\"Decision Making\"})}),n(r.td,{style:{textAlign:\"left\"},children:\"Predefined and does not change during execution\"}),n(r.td,{style:{textAlign:\"left\"},children:\"Adjusts based on current conditions and performance\"})]}),i(r.tr,{children:[n(r.td,{style:{textAlign:\"left\"},children:n(r.strong,{children:\"Flexibility\"})}),n(r.td,{style:{textAlign:\"left\"},children:\"Less flexible, as it doesn't adapt to changes\"}),n(r.td,{style:{textAlign:\"left\"},children:\"Highly flexible, adapts to real-time server loads\"})]}),i(r.tr,{children:[n(r.td,{style:{textAlign:\"left\"},children:n(r.strong,{children:\"Performance\"})}),n(r.td,{style:{textAlign:\"left\"},children:\"Does not consider real-time performance metrics\"}),n(r.td,{style:{textAlign:\"left\"},children:\"Considers metrics like CPU usage, memory load, etc.\"})]}),i(r.tr,{children:[n(r.td,{style:{textAlign:\"left\"},children:n(r.strong,{children:\"Complexity\"})}),n(r.td,{style:{textAlign:\"left\"},children:\"Simpler to implement\"}),n(r.td,{style:{textAlign:\"left\"},children:\"More complex due to continuous monitoring\"})]}),i(r.tr,{children:[n(r.td,{style:{textAlign:\"left\"},children:n(r.strong,{children:\"Examples\"})}),n(r.td,{style:{textAlign:\"left\"},children:\"Round-robin, Hash-based\"}),n(r.td,{style:{textAlign:\"left\"},children:\"Least Connections, Weighted Response Time\"})]}),i(r.tr,{children:[n(r.td,{style:{textAlign:\"left\"}}),n(r.td,{style:{textAlign:\"left\"}}),n(r.td,{style:{textAlign:\"left\"}})]})]})]}),\"\\n\",n(r.h3,{id:\"some-important-type-of-load-balancing-algorithm-\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#some-important-type-of-load-balancing-algorithm-\",children:\"Some important type of Load Balancing Algorithm:-\"})}),\"\\n\",n(\"div\",{style:{display:\"flex\",justifyContent:\"center\"},children:n(\"img\",{style:{width:\"50%\",height:\"40%\"},src:\"https://cdn.sanity.io/images/l2tpt56d/production/6d95efa1b9164426bfdbc07be2e80de7bb65fecd-878x962.png\"})}),\"\\n\",n(r.h2,{id:\"static-type-algorithm\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#static-type-algorithm\",children:n(r.strong,{children:\"Static Type Algorithm\"})})}),\"\\n\",n(r.h2,{id:\"round-robin\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#round-robin\",children:\"Round Robin\"})}),\"\\n\",n(r.p,{children:\"Round-robin is a simple and widely used load-balancing algorithm that distributes incoming requests\\nevenly across a group of servers. In this method, the load balancer assigns each request to the next\\nserver in a sequential order, looping back to the first server after reaching the last.\"}),\"\\n\",n(r.p,{children:\"For example, consider a web application with three servers: A, B, and C.\\nThe round-robin algorithm assigns the first request to server A, the second\\nto server B, the third to server C, and the fourth back to server A, continuing this pattern for subsequent requests.\"}),\"\\n\",n(r.h3,{id:\"advantage\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#advantage\",children:\"Advantage\"})}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Simplicity-\"}),\" The round-robin algorithm is easy to implement and understand, requiring minimal configuration and no real-time monitoring of server performance.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{start:\"2\",children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Fairness-\"}),\" It ensures equal distribution of requests across servers, making it suitable for environments with uniform server capacities and workloads.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",n(r.h3,{id:\"limitation\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#limitation\",children:\"Limitation\"})}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Uneven Load Distribution -\"}),\" Round-robin does not consider the current load or processing power of each server, which can lead to uneven distribution.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{start:\"2\",children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Lack of Fault Tolerance -\"}),\" If a server goes down, the basic round-robin algorithm continues to route requests to it unless additional mechanisms are in place to detect and bypass failed servers.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",n(\"div\",{style:{display:\"flex\",justifyContent:\"center\"},children:n(\"img\",{style:{width:\"70%\",height:\"40%\"},src:\"https://cdn.sanity.io/images/l2tpt56d/production/8e63de88e022b09c69a918f1c1adc7297ecbcbc0-1384x772.png\"})}),\"\\n\",n(r.h2,{id:\"sticky-round-robin\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#sticky-round-robin\",children:\"Sticky Round Robin\"})}),\"\\n\",n(r.p,{children:\"Sticky Round Robin is a variation of the round-robin load-balancing\\nalgorithm that ensures a users requests are consistently directed to\\nthe same server during their session. This is particularly useful for applications that maintain session state on individual servers.\"}),\"\\n\",n(r.p,{children:\"For example, consider an e-commerce site with three servers: A, B, and C.\\nA new visitor might be assigned to server A for their first request.\\nWith sticky round-robin, all subsequent requests from that user during the session will also be sent to server A, preserving session continuity.\"}),\"\\n\",n(r.h3,{id:\"advantage-1\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#advantage-1\",children:\"Advantage\"})}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Session Continuity-\"}),\" Sticky round-robin maintains user session consistency by directing all requests from a user to the same server, ensuring a seamless user experience.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{start:\"2\",children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Stateful Applications-\"}),\" It is ideal for applications that store session-specific data on individual servers, as it prevents session data from being scattered across multiple servers.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",n(r.h3,{id:\"limitation-1\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#limitation-1\",children:\"Limitation\"})}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Uneven Load Distribution -\"}),\"  Sticky round-robin can lead to uneven load distribution if certain sessions are more resource-intensive, causing some servers to become overloaded while others remain underutilized.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{start:\"2\",children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Scalability Issues -\"}),\" Adding or removing servers can disrupt the assignment of sessions.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",n(\"div\",{style:{display:\"flex\",justifyContent:\"center\"},children:n(\"img\",{style:{width:\"70%\",height:\"40%\"},src:\"https://cdn.sanity.io/images/l2tpt56d/production/d8ea313509f7b3b273507296553a457d7d29552d-1322x816.png\"})}),\"\\n\",n(r.h2,{id:\"weighted-round-robin\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#weighted-round-robin\",children:\"Weighted Round Robin\"})}),\"\\n\",n(r.p,{children:\"Weighted Round Robin is an enhanced version of the round-robin load-balancing\\nalgorithm that assigns different weights to servers based on their capacity\\nand performance. Each server is given a weight, reflecting its processing power or resource availability, allowing more capable servers to handle a\\nlarger share of requests.\"}),\"\\n\",n(r.p,{children:\"For example, if there are three servers with weights 3, 2, and 1, respectively, the server with weight 3 will receive three requests for every\\ntwo and one that the others receive. This approach ensures a more efficient and balanced distribution of workloads.\"}),\"\\n\",n(r.h3,{id:\"advantage-2\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#advantage-2\",children:\"Advantage\"})}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Resource Utilization-\"}),\" Weighted round-robin allocates more requests to servers with higher capacity, optimizing resource utilization by leveraging each server's strengths.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{start:\"2\",children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Customizable Distribution-\"}),\" Administrators can tailor request distribution based on server capabilities, improving performance by assigning more traffic to more powerful servers.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",n(r.h3,{id:\"limitation-2\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#limitation-2\",children:\"Limitation\"})}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Complex Configuration-\"}),\" - Assigning appropriate weights to servers requires careful analysis and manual configuration which can be complex and time-consuming.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{start:\"2\",children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Resource Changes-\"}),\" Weighted round robin does not automatically adjust to real-time changes in server performance or availability, potentially leading to inefficiencies if server loads fluctuate\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",n(\"div\",{style:{display:\"flex\",justifyContent:\"center\"},children:n(\"img\",{style:{width:\"70%\",height:\"40%\"},src:\"https://cdn.sanity.io/images/l2tpt56d/production/22acc8dac0a68523f13d94c28df54edac4b73386-1434x886.png\"})}),\"\\n\",n(r.h2,{id:\"ipurl\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#ipurl\",children:\"IP/URL\"})}),\"\\n\",n(r.p,{children:\"IP/URL hash load balancing is an algorithm that directs incoming requests to servers based on a hash of the client's IP address or the requested URL. This method creates a consistent hash value, which is then mapped to a specific server.\"}),\"\\n\",n(r.h2,{id:\"dynamic-type-algorithm\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#dynamic-type-algorithm\",children:n(r.strong,{children:\"Dynamic Type Algorithm\"})})}),\"\\n\",n(r.h2,{id:\"least-connection\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#least-connection\",children:\"Least Connection\"})}),\"\\n\",n(r.p,{children:\"The Least Connections load balancing algorithm distributes incoming requests to the server with the fewest active connections\\nat the time of the request. This approach ensures that each server handles an\\nappropriate amount of traffic based on its current load, making it particularly effective for environments where requests have varying processing times and resource requirements.\"}),\"\\n\",n(r.p,{children:\"For instance, if three servers are running and one server has significantly fewer connections, the next incoming request will be routed to that server, ensuring efficient handling and reduced latency.\"}),\"\\n\",n(r.h3,{id:\"advantages\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#advantages\",children:\"Advantages:\"})}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Dynamic Load Distribution-\"}),\" Least connection efficiently balances traffic by considering real-time server loads, directing new requests to the least busy servers.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{start:\"2\",children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Optimized Resource Usage-\"}),\" By minimizing server congestion, it enhances response times and overall application performance.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",n(r.h3,{id:\"limitations\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#limitations\",children:\"Limitations:\"})}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Initial Connection Surge-\"}),\" New servers can be overwhelmed if they start with zero connections, leading to an uneven distribution initially.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{start:\"2\",children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Complexity-\"}),\" Requires constant monitoring of active connections, increasing computational overhead and complexity compared to simpler algorithms.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",n(\"div\",{style:{display:\"flex\",justifyContent:\"center\"},children:n(\"img\",{style:{width:\"70%\",height:\"40%\"},src:\"https://cdn.sanity.io/images/l2tpt56d/production/e97f72e62610c7866486e0a899ad1932e14ed61c-1178x796.png\"})}),\"\\n\",n(r.h2,{id:\"least-time\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#least-time\",children:\"Least Time\"})}),\"\\n\",n(r.p,{children:\"The Least Time load balancing algorithm routes incoming requests to the server with the lowest estimated response time. This estimation considers both the server's active connection count and the average response time of recent requests.\"}),\"\\n\",n(r.p,{children:\"For example, if two servers have similar connection counts, but one server has a faster average response time, the next request will be directed to the quicker server.\"}),\"\\n\",n(r.p,{children:\"However, it requires constant monitoring which  incurs significant overhead  and introduces complexity\"}),\"\\n\",n(\"div\",{style:{display:\"flex\",justifyContent:\"center\"},children:n(\"img\",{style:{width:\"70%\",height:\"40%\"},src:\"https://cdn.sanity.io/images/l2tpt56d/production/3ced0b0de7fdc7e3620c52c85bce872a287d8f44-1230x800.png\"})}),\"\\n\",n(r.h3,{id:\"advantages-1\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#advantages-1\",children:\"Advantages:\"})}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Optimized Response Times-\"}),\" Least time prioritizes routing requests to servers with the fastest response times, improving overall user experience and reducing latency.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{start:\"2\",children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Efficient Load Balancing-\"}),\" By considering current loads and response metrics, it dynamically balances traffic to prevent server overloading.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",n(r.h3,{id:\"limitations-1\",children:n(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#limitations-1\",children:\"Limitations:\"})}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Resource Intensive-\"}),\" Requires continuous monitoring of server performance and response times, increasing computational complexity and overhead.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",i(r.li,{children:[\"\\n\",i(r.ol,{start:\"2\",children:[\"\\n\",i(r.li,{children:[n(r.strong,{children:\"Variable Metrics-\"}),\" Fluctuations in response times can lead to inconsistent routing decisions, potentially affecting load distribution stability.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\"]})]})}return{default:function(e={}){const{wrapper:i}=e.components||{};return i?n(i,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};",
    "slugAsParams": "code-blocks"
  },
  {
    "slug": "blog/react-debug-magic",
    "readtime": 6,
    "title": "Debugging React with Wizardry and Magic: A Developer's Spellbook",
    "description": "Enter the mystical world of debugging React applications with a touch of humor. Learn spells and incantations to banish bugs and optimize your code, all while navigating the enchanting forest of React development.",
    "date": "2024-02-27T00:00:00.000Z",
    "published": false,
    "tags": [
      "react"
    ],
    "body": "const{Fragment:e,jsx:n,jsxs:a}=arguments[0];function _createMdxContent(r){const l={a:\"a\",code:\"code\",figure:\"figure\",h1:\"h1\",h2:\"h2\",li:\"li\",p:\"p\",pre:\"pre\",span:\"span\",ul:\"ul\",...r.components};return a(e,{children:[n(l.h1,{id:\"debugging-react-with-wizardry-and-magic\",children:n(l.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#debugging-react-with-wizardry-and-magic\",children:\"Debugging React with Wizardry and Magic\"})}),\"\\n\",n(l.p,{children:\"In the mystical land of React, where components render and state changes abound, even the most skilled developers can encounter nefarious bugs. Fear not, for I have compiled a spellbook to assist you in banishing these foul creatures back to the depths from whence they came.\"}),\"\\n\",n(l.h2,{id:\"the-spell-for-revealing-hidden-bugs\",children:n(l.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#the-spell-for-revealing-hidden-bugs\",children:\"The Spell for Revealing Hidden Bugs\"})}),\"\\n\",n(l.p,{children:\"Hidden bugs are like invisible sprites, causing mischief unseen. Use this spell to reveal them:\"}),\"\\n\",n(l.p,{children:\"Ingredients:\"}),\"\\n\",a(l.ul,{children:[\"\\n\",n(l.li,{children:\"1x careful reading of error messages\"}),\"\\n\",n(l.li,{children:\"2x console.log\"}),\"\\n\",n(l.li,{children:\"A dash of breakpoint magic\"}),\"\\n\"]}),\"\\n\",n(l.p,{children:\"Chant:\"}),\"\\n\",n(l.figure,{\"data-rehype-pretty-code-figure\":\"\",children:n(l.pre,{style:{backgroundColor:\"#24292e\",color:\"#e1e4e8\"},tabIndex:\"0\",\"data-language\":\"jsx\",\"data-theme\":\"github-dark\",children:n(l.code,{\"data-language\":\"jsx\",\"data-theme\":\"github-dark\",style:{display:\"grid\"},children:a(l.span,{\"data-line\":\"\",children:[n(l.span,{style:{color:\"#E1E4E8\"},children:\"console.\"}),n(l.span,{style:{color:\"#B392F0\"},children:\"log\"}),n(l.span,{style:{color:\"#E1E4E8\"},children:\"(\"}),n(l.span,{style:{color:\"#9ECBFF\"},children:'\"Reveal thyself, bug!\"'}),n(l.span,{style:{color:\"#E1E4E8\"},children:\");\"})]})})})}),\"\\n\",n(l.p,{children:\"With this spell, the hidden bug will have no choice but to show itself. Remember, the console is your wand; wield it wisely.\"}),\"\\n\",n(l.h2,{id:\"the-incantation-for-smoothing-state-changes\",children:n(l.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#the-incantation-for-smoothing-state-changes\",children:\"The Incantation for Smoothing State Changes\"})}),\"\\n\",n(l.p,{children:\"State changes can be tricky, leading to unexpected behavior. Smooth them over with this incantation:\"}),\"\\n\",n(l.p,{children:\"Ingredients:\"}),\"\\n\",a(l.ul,{children:[\"\\n\",n(l.li,{children:\"A pinch of prevState\"}),\"\\n\",n(l.li,{children:\"A tablespoon of useEffect\"}),\"\\n\",n(l.li,{children:\"A careful reading of the React docs\"}),\"\\n\"]}),\"\\n\",n(l.p,{children:\"Chant:\"}),\"\\n\",n(l.figure,{\"data-rehype-pretty-code-figure\":\"\",children:n(l.pre,{style:{backgroundColor:\"#24292e\",color:\"#e1e4e8\"},tabIndex:\"0\",\"data-language\":\"jsx\",\"data-theme\":\"github-dark\",children:a(l.code,{\"data-language\":\"jsx\",\"data-theme\":\"github-dark\",style:{display:\"grid\"},children:[a(l.span,{\"data-line\":\"\",children:[n(l.span,{style:{color:\"#79B8FF\"},children:\"this\"}),n(l.span,{style:{color:\"#E1E4E8\"},children:\".\"}),n(l.span,{style:{color:\"#B392F0\"},children:\"setState\"}),n(l.span,{style:{color:\"#E1E4E8\"},children:\"((\"}),n(l.span,{style:{color:\"#FFAB70\"},children:\"prevState\"}),n(l.span,{style:{color:\"#E1E4E8\"},children:\") \"}),n(l.span,{style:{color:\"#F97583\"},children:\"=>\"}),n(l.span,{style:{color:\"#E1E4E8\"},children:\" ({\"})]}),\"\\n\",a(l.span,{\"data-line\":\"\",children:[n(l.span,{style:{color:\"#F97583\"},children:\"  ...\"}),n(l.span,{style:{color:\"#E1E4E8\"},children:\"prevState,\"})]}),\"\\n\",a(l.span,{\"data-line\":\"\",children:[n(l.span,{style:{color:\"#E1E4E8\"},children:\"  newStateValue: \"}),n(l.span,{style:{color:\"#9ECBFF\"},children:'\"Magically updated!\"'}),n(l.span,{style:{color:\"#E1E4E8\"},children:\",\"})]}),\"\\n\",n(l.span,{\"data-line\":\"\",children:n(l.span,{style:{color:\"#E1E4E8\"},children:\"}));\"})})]})})}),\"\\n\",n(l.p,{children:\"This careful blend of prevState and useEffect ensures that your state changes are as smooth as a wizard's potion.\"}),\"\\n\",n(l.h2,{id:\"the-potion-for-enhancing-performance\",children:n(l.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#the-potion-for-enhancing-performance\",children:\"The Potion for Enhancing Performance\"})}),\"\\n\",n(l.p,{children:\"To enhance the performance of your React app, brew this powerful potion:\"}),\"\\n\",n(l.p,{children:\"Ingredients:\"}),\"\\n\",a(l.ul,{children:[\"\\n\",n(l.li,{children:\"1 part useMemo\"}),\"\\n\",n(l.li,{children:\"2 parts useCallback\"}),\"\\n\",n(l.li,{children:\"A sprig of PureComponent\"}),\"\\n\"]}),\"\\n\",n(l.p,{children:\"Brew:\"}),\"\\n\",a(l.p,{children:[\"Mix these ingredients in your component's cauldron. Use \",n(l.code,{children:\"useMemo\"}),\" and \",n(l.code,{children:\"useCallback\"}),\" to prevent unnecessary re-renders, and \",n(l.code,{children:\"PureComponent\"}),\" to ensure your components only update when truly needed.\"]}),\"\\n\",n(l.figure,{\"data-rehype-pretty-code-figure\":\"\",children:n(l.pre,{style:{backgroundColor:\"#24292e\",color:\"#e1e4e8\"},tabIndex:\"0\",\"data-language\":\"jsx\",\"data-theme\":\"github-dark\",children:n(l.code,{\"data-language\":\"jsx\",\"data-theme\":\"github-dark\",style:{display:\"grid\"},children:a(l.span,{\"data-line\":\"\",children:[n(l.span,{style:{color:\"#F97583\"},children:\"const\"}),n(l.span,{style:{color:\"#79B8FF\"},children:\" memoizedValue\"}),n(l.span,{style:{color:\"#F97583\"},children:\" =\"}),n(l.span,{style:{color:\"#B392F0\"},children:\" useMemo\"}),n(l.span,{style:{color:\"#E1E4E8\"},children:\"(() \"}),n(l.span,{style:{color:\"#F97583\"},children:\"=>\"}),n(l.span,{style:{color:\"#B392F0\"},children:\" computeExpensiveValue\"}),n(l.span,{style:{color:\"#E1E4E8\"},children:\"(a, b), [a, b]);\"})]})})})}),\"\\n\",n(l.p,{children:\"With this potion, your app will fly faster than a witch on a broomstick during a full moon.\"}),\"\\n\",n(l.h2,{id:\"conclusion-the-magic-of-react-development\",children:n(l.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#conclusion-the-magic-of-react-development\",children:\"Conclusion: The Magic of React Development\"})}),\"\\n\",n(l.p,{children:\"Debugging React apps requires a mix of logic, intuition, and a bit of magic. By applying these spells and potions, you can navigate the enchanted forest of React development with ease. Remember, the true magic lies not just in the spells themselves, but in understanding the principles that make them work.\"}),\"\\n\",n(l.p,{children:\"Happy debugging, and may your React journey be magical!\"})]})}return{default:function(e={}){const{wrapper:a}=e.components||{};return a?n(a,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};",
    "slugAsParams": "react-debug-magic"
  }
]